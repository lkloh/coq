DIGEST 575dfb61ff7acc1f82095aad328f610d
FPoly
R354:358 Lists <> <> lib
ind 905:912 <> boollist
constr 928:935 <> bool_nil
constr 952:960 <> bool_cons
R939:946 Poly <> boollist ind
R984:991 Poly <> boollist ind
R972:979 Poly <> boollist ind
R964:967 Basics <> bool ind
ind 1478:1481 <> list
constr 1506:1508 <> nil
constr 1523:1526 <> cons
R1512:1515 Poly <> list ind
R1545:1548 Poly <> list ind
R1535:1538 Poly <> list ind
R2741:2743 Poly <> nil constr
R2793:2796 Poly <> cons constr
R3204:3207 Poly <> cons constr
R3216:3219 Poly <> cons constr
R3228:3230 Poly <> nil constr
R3232:3234 Coq.Init.Datatypes <> nat ind
R3221:3223 Coq.Init.Datatypes <> nat ind
R3209:3211 Coq.Init.Datatypes <> nat ind
def 3627:3632 <> length
R3646:3649 Poly <> list ind
R3651:3651 Poly <> X var
R3656:3658 Coq.Init.Datatypes <> nat ind
R3671:3671 Poly <> l var
R3682:3684 Poly <> nil constr
R3700:3703 Poly <> cons constr
R3712:3712 Coq.Init.Datatypes <> S constr
R3715:3720 Poly <> length def
R3722:3722 Poly <> X var
def 4259:4270 <> test_length1
R4324:4326 Coq.Init.Logic <> :type_scope:x_'='_x not
R4278:4283 Poly <> length def
R4290:4293 Poly <> cons constr
R4302:4305 Poly <> cons constr
R4314:4316 Poly <> nil constr
R4318:4320 Coq.Init.Datatypes <> nat ind
R4307:4309 Coq.Init.Datatypes <> nat ind
R4295:4297 Coq.Init.Datatypes <> nat ind
R4285:4287 Coq.Init.Datatypes <> nat ind
def 4483:4494 <> test_length2
R4541:4543 Coq.Init.Logic <> :type_scope:x_'='_x not
R4502:4507 Poly <> length def
R4515:4518 Poly <> cons constr
R4531:4533 Poly <> nil constr
R4535:4538 Basics <> bool ind
R4525:4528 Basics <> true constr
R4520:4523 Basics <> bool ind
R4509:4512 Basics <> bool ind
def 4720:4722 <> app
R4744:4747 Poly <> list ind
R4749:4749 Poly <> X var
R4771:4774 Poly <> list ind
R4776:4776 Poly <> X var
R4790:4791 Poly <> l1 var
R4802:4804 Poly <> nil constr
R4814:4815 Poly <> l2 var
R4821:4824 Poly <> cons constr
R4833:4836 Poly <> cons constr
R4843:4845 Poly <> app def
R4851:4852 Poly <> l2 var
R4847:4847 Poly <> X var
R4838:4838 Poly <> X var
def 4872:4875 <> snoc
R4889:4892 Poly <> list ind
R4894:4894 Poly <> X var
R4900:4900 Poly <> X var
R4906:4909 Poly <> list ind
R4911:4911 Poly <> X var
R4925:4925 Poly <> l var
R4936:4938 Poly <> nil constr
R4948:4951 Poly <> cons constr
R4958:4960 Poly <> nil constr
R4962:4962 Poly <> X var
R4955:4955 Poly <> v var
R4953:4953 Poly <> X var
R4969:4972 Poly <> cons constr
R4981:4984 Poly <> cons constr
R4991:4994 Poly <> snoc def
R5000:5000 Poly <> v var
R4996:4996 Poly <> X var
R4986:4986 Poly <> X var
def 5020:5022 <> rev
R5036:5039 Poly <> list ind
R5041:5041 Poly <> X var
R5046:5049 Poly <> list ind
R5051:5051 Poly <> X var
R5064:5064 Poly <> l var
R5075:5077 Poly <> nil constr
R5087:5089 Poly <> nil constr
R5091:5091 Poly <> X var
R5097:5100 Poly <> cons constr
R5109:5112 Poly <> snoc def
R5117:5119 Poly <> rev def
R5121:5121 Poly <> X var
R5114:5114 Poly <> X var
def 5146:5154 <> test_rev1
R5205:5210 Coq.Init.Logic <> :type_scope:x_'='_x not
R5244:5244 Coq.Init.Logic <> :type_scope:x_'='_x not
R5162:5164 Poly <> rev def
R5171:5174 Poly <> cons constr
R5183:5186 Poly <> cons constr
R5195:5197 Poly <> nil constr
R5199:5201 Coq.Init.Datatypes <> nat ind
R5188:5190 Coq.Init.Datatypes <> nat ind
R5176:5178 Coq.Init.Datatypes <> nat ind
R5166:5168 Coq.Init.Datatypes <> nat ind
R5211:5214 Poly <> cons constr
R5223:5226 Poly <> cons constr
R5235:5237 Poly <> nil constr
R5239:5241 Coq.Init.Datatypes <> nat ind
R5228:5230 Coq.Init.Datatypes <> nat ind
R5216:5218 Coq.Init.Datatypes <> nat ind
def 5282:5290 <> test_rev2
R5314:5316 Coq.Init.Logic <> :type_scope:x_'='_x not
R5295:5297 Poly <> rev def
R5305:5307 Poly <> nil constr
R5309:5312 Basics <> bool ind
R5299:5302 Basics <> bool ind
R5317:5319 Poly <> nil constr
R5321:5324 Basics <> bool ind
mod 5361:5369 <> MumbleBaz
ind 5492:5497 MumbleBaz mumble
constr 5513:5513 MumbleBaz a
constr 5528:5528 MumbleBaz b
constr 5560:5560 MumbleBaz c
R5517:5522 Poly <> mumble ind
R5549:5554 Poly <> mumble ind
R5542:5544 Coq.Init.Datatypes <> nat ind
R5532:5537 Poly <> mumble ind
R5564:5569 Poly <> mumble ind
ind 5583:5589 MumbleBaz grumble
constr 5614:5614 MumbleBaz d
constr 5642:5642 MumbleBaz e
R5628:5634 Poly <> grumble ind
R5618:5623 Poly MumbleBaz mumble ind
R5651:5657 Poly <> grumble ind
ind 6067:6069 MumbleBaz baz
constr 6086:6086 MumbleBaz x
constr 6106:6106 MumbleBaz y
R6097:6099 Poly <> baz ind
R6090:6092 Poly <> baz ind
R6125:6127 Poly <> baz ind
R6117:6120 Basics <> bool ind
R6110:6112 Poly <> baz ind
R6202:6210 Poly MumbleBaz <> mod
def 6473:6476 <> app'
R6488:6491 Poly <> list ind
R6493:6493 Poly <> X var
R6506:6507 Poly <> l1 var
R6518:6520 Poly <> nil constr
R6530:6531 Poly <> l2 var
R6537:6540 Poly <> cons constr
R6549:6552 Poly <> cons constr
R6559:6562 Poly <> app' def
R6568:6569 Poly <> l2 var
R6564:6564 Poly <> X var
R6554:6554 Poly <> X var
R6659:6662 Poly <> app' def
R6726:6728 Poly <> app def
def 9373:9379 <> length'
R9393:9396 Poly <> list ind
R9398:9398 Poly <> X var
R9403:9405 Coq.Init.Datatypes <> nat ind
R9418:9418 Poly <> l var
R9429:9431 Poly <> nil constr
R9447:9450 Poly <> cons constr
R9459:9459 Coq.Init.Datatypes <> S constr
R9462:9468 Poly <> length' def
def 9757:9763 <> list123
R9770:9773 Poly <> cons constr
R9782:9785 Poly <> cons constr
R9794:9797 Poly <> cons constr
R9806:9808 Poly <> nil constr
R9810:9812 Coq.Init.Datatypes <> nat ind
R9799:9801 Coq.Init.Datatypes <> nat ind
R9787:9789 Coq.Init.Datatypes <> nat ind
R9775:9777 Coq.Init.Datatypes <> nat ind
def 9886:9893 <> list123'
R9898:9901 Poly <> cons constr
R9908:9911 Poly <> cons constr
R9918:9921 Poly <> cons constr
R9928:9930 Poly <> nil constr
R10416:10418 Poly <> nil constr
R10416:10418 Poly <> nil constr
R10435:10438 Poly <> cons constr
R10435:10438 Poly <> cons constr
R10520:10525 Poly <> length def
R10520:10525 Poly <> length def
R10544:10546 Poly <> app def
R10544:10546 Poly <> app def
R10569:10571 Poly <> rev def
R10569:10571 Poly <> rev def
R10591:10594 Poly <> snoc def
R10591:10594 Poly <> snoc def
def 10656:10664 <> list123''
R10669:10672 Poly <> cons constr
R10677:10680 Poly <> cons constr
R10685:10688 Poly <> cons constr
R10692:10694 Poly <> nil constr
R10706:10711 Poly <> length def
R10713:10721 Poly <> list123'' def
def 10915:10922 <> length''
R10936:10939 Poly <> list ind
R10941:10941 Poly <> X var
R10946:10948 Coq.Init.Datatypes <> nat ind
R10961:10961 Poly <> l var
R10972:10974 Poly <> nil constr
R10990:10993 Poly <> cons constr
R11002:11002 Coq.Init.Datatypes <> S constr
R11005:11012 Poly <> length'' def
def 12039:12043 <> mynil
R12047:12050 Poly <> list ind
R12052:12054 Coq.Init.Datatypes <> nat ind
R12059:12061 Poly <> nil constr
R12190:12192 Poly <> nil constr
def 12207:12212 <> mynil'
R12218:12220 Poly <> nil constr
R12222:12224 Coq.Init.Datatypes <> nat ind
R12517:12520 Poly <> cons constr
not 12504 <> ::x_'::'_x
R12602:12604 Poly <> nil constr
not 12593 <> ::'['_']'
R12637:12640 Poly <> cons constr
R12648:12651 Poly <> cons constr
R12655:12656 Poly <> ::'['_']' not
not 12616 <> ::'['_x_';'_'..'_';'_x_']'
R12686:12688 Poly <> app def
not 12673 <> ::x_'++'_x
def 12821:12830 <> list123'''
R12835:12835 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12837:12838 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12840:12841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12843:12843 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 13196:13201 <> repeat
R13219:13219 Poly <> X var
R13231:13233 Coq.Init.Datatypes <> nat ind
R13238:13241 Poly <> list ind
R13243:13243 Poly <> X var
R13256:13260 Poly <> count var
R13278:13280 Poly <> nil constr
R13288:13288 Coq.Init.Datatypes <> S constr
R13301:13305 Poly <> ::x_'::'_x not
R13321:13321 Poly <> ::x_'::'_x not
R13300:13300 Poly <> n var
R13306:13311 Poly <> repeat def
R13313:13313 Poly <> n var
def 13340:13351 <> test_repeat1
R13369:13371 Coq.Init.Logic <> :type_scope:x_'='_x not
R13356:13361 Poly <> repeat def
R13363:13366 Basics <> true constr
R13372:13375 Poly <> cons constr
R13383:13386 Poly <> cons constr
R13393:13395 Poly <> nil constr
R13388:13391 Basics <> true constr
R13377:13380 Basics <> true constr
prf 13446:13452 <> nil_app
R13480:13483 Poly <> list ind
R13485:13485 Poly <> X var
R13498:13500 Coq.Init.Logic <> :type_scope:x_'='_x not
R13490:13492 Poly <> app def
R13497:13497 Poly <> l var
R13494:13495 Poly <> ::'['_']' not
R13501:13501 Poly <> l var
prf 13545:13552 <> rev_snoc
R13605:13605 Poly <> X var
R13640:13643 Poly <> list ind
R13645:13645 Poly <> X var
R13664:13666 Coq.Init.Logic <> :type_scope:x_'='_x not
R13650:13652 Poly <> rev def
R13655:13658 Poly <> snoc def
R13662:13662 Poly <> v var
R13660:13660 Poly <> s var
R13668:13672 Poly <> ::x_'::'_x not
R13678:13678 Poly <> ::x_'::'_x not
R13667:13667 Poly <> v var
R13673:13675 Poly <> rev def
R13677:13677 Poly <> s var
prf 13844:13857 <> rev_involutive
R13889:13892 Poly <> list ind
R13894:13894 Poly <> X var
R13910:13912 Coq.Init.Logic <> :type_scope:x_'='_x not
R13899:13901 Poly <> rev def
R13904:13906 Poly <> rev def
R13908:13908 Poly <> l var
R13913:13913 Poly <> l var
R14045:14052 Poly <> rev_snoc thm
R14045:14052 Poly <> rev_snoc thm
prf 14110:14125 <> snoc_with_append
R14186:14189 Poly <> list ind
R14191:14191 Poly <> X var
R14230:14230 Poly <> X var
R14252:14254 Coq.Init.Logic <> :type_scope:x_'='_x not
R14235:14238 Poly <> snoc def
R14251:14251 Poly <> v var
R14243:14246 Poly <> ::x_'++'_x not
R14241:14242 Poly <> l1 var
R14247:14248 Poly <> l2 var
R14257:14261 Poly <> ::x_'++'_x not
R14271:14271 Poly <> ::x_'++'_x not
R14255:14256 Poly <> l1 var
R14262:14265 Poly <> snoc def
R14270:14270 Poly <> v var
R14267:14268 Poly <> l2 var
ind 14710:14713 <> prod
constr 14740:14743 <> pair
R14757:14760 Poly <> prod ind
R14778:14781 Poly <> pair constr
R14778:14781 Poly <> pair constr
R14928:14931 Poly <> pair constr
not 14912 <> ::'('_x_','_x_')'
R15064:15067 Poly <> prod ind
not 15052 <> :type_scope:x_'*'_x
def 15690:15692 <> fst
R15713:15715 Poly <> :type_scope:x_'*'_x not
R15712:15712 Poly <> X var
R15716:15716 Poly <> Y var
R15721:15721 Poly <> X var
R15734:15734 Poly <> p var
R15747:15747 Poly <> ::'('_x_','_x_')' not
R15749:15749 Poly <> ::'('_x_','_x_')' not
R15751:15751 Poly <> ::'('_x_','_x_')' not
def 15777:15779 <> snd
R15800:15802 Poly <> :type_scope:x_'*'_x not
R15799:15799 Poly <> X var
R15803:15803 Poly <> Y var
R15808:15808 Poly <> Y var
R15821:15821 Poly <> p var
R15833:15833 Poly <> ::'('_x_','_x_')' not
R15835:15835 Poly <> ::'('_x_','_x_')' not
R15837:15837 Poly <> ::'('_x_','_x_')' not
def 16180:16186 <> combine
R16207:16210 Poly <> list ind
R16212:16212 Poly <> X var
R16221:16224 Poly <> list ind
R16226:16226 Poly <> Y var
R16242:16245 Poly <> list ind
R16249:16249 Poly <> :type_scope:x_'*'_x not
R16248:16248 Poly <> X var
R16250:16250 Poly <> Y var
R16264:16264 Poly <> ::'('_x_','_x_')' not
R16267:16267 Poly <> ::'('_x_','_x_')' not
R16270:16270 Poly <> ::'('_x_','_x_')' not
R16265:16266 Poly <> lx var
R16268:16269 Poly <> ly var
R16281:16281 Poly <> ::'('_x_','_x_')' not
R16284:16284 Poly <> ::'('_x_','_x_')' not
R16286:16286 Poly <> ::'('_x_','_x_')' not
R16282:16283 Poly <> ::'['_']' not
R16291:16292 Poly <> ::'['_']' not
R16298:16298 Poly <> ::'('_x_','_x_')' not
R16300:16300 Poly <> ::'('_x_','_x_')' not
R16303:16303 Poly <> ::'('_x_','_x_')' not
R16301:16302 Poly <> ::'['_']' not
R16308:16309 Poly <> ::'['_']' not
R16315:16315 Poly <> ::'('_x_','_x_')' not
R16321:16322 Poly <> ::'('_x_','_x_')' not
R16328:16328 Poly <> ::'('_x_','_x_')' not
R16317:16318 Poly <> ::x_'::'_x not
R16324:16325 Poly <> ::x_'::'_x not
R16338:16342 Poly <> ::x_'::'_x not
R16356:16356 Poly <> ::x_'::'_x not
R16333:16333 Poly <> ::'('_x_','_x_')' not
R16335:16335 Poly <> ::'('_x_','_x_')' not
R16337:16337 Poly <> ::'('_x_','_x_')' not
R16343:16349 Poly <> combine def
R16837:16843 Poly <> combine def
R16863:16869 Poly <> combine def
R16877:16877 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16883:16883 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16889:16889 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16894:16894 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16899:16899 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16895:16898 Basics <> true constr
R16890:16893 Basics <> true constr
R16884:16888 Basics <> false constr
R16878:16882 Basics <> false constr
R16871:16871 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16873:16873 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16875:16875 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 17272:17276 <> split
R17296:17299 Poly <> list ind
R17303:17303 Poly <> :type_scope:x_'*'_x not
R17302:17302 Poly <> X var
R17304:17304 Poly <> Y var
R17310:17310 Poly <> :type_scope:x_'*'_x not
R17317:17321 Poly <> :type_scope:x_'*'_x not
R17328:17328 Poly <> :type_scope:x_'*'_x not
R17311:17314 Poly <> list ind
R17316:17316 Poly <> X var
R17322:17325 Poly <> list ind
R17327:17327 Poly <> Y var
R17341:17341 Poly <> l var
R17354:17356 Poly <> nil constr
R17361:17361 Poly <> ::'('_x_','_x_')' not
R17365:17366 Poly <> ::'('_x_','_x_')' not
R17370:17370 Poly <> ::'('_x_','_x_')' not
R17362:17364 Poly <> nil constr
R17367:17369 Poly <> nil constr
R17379:17380 Poly <> ::x_'::'_x not
R17387:17388 Poly <> ::'('_x_','_x_')' not
R17414:17415 Poly <> ::'('_x_','_x_')' not
R17441:17442 Poly <> ::'('_x_','_x_')' not
R17389:17389 Poly <> ::x_'::'_x not
R17395:17398 Poly <> ::x_'::'_x not
R17413:17413 Poly <> ::x_'::'_x not
R17390:17392 Poly <> fst def
R17399:17401 Poly <> fst def
R17404:17408 Poly <> split def
R17416:17416 Poly <> ::x_'::'_x not
R17422:17425 Poly <> ::x_'::'_x not
R17440:17440 Poly <> ::x_'::'_x not
R17417:17419 Poly <> snd def
R17426:17428 Poly <> snd def
R17431:17435 Poly <> split def
def 17475:17484 <> test_split
R17516:17518 Coq.Init.Logic <> :type_scope:x_'='_x not
R17489:17493 Poly <> split def
R17495:17495 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17505:17505 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17515:17515 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17506:17506 Poly <> ::'('_x_','_x_')' not
R17508:17508 Poly <> ::'('_x_','_x_')' not
R17514:17514 Poly <> ::'('_x_','_x_')' not
R17509:17513 Basics <> false constr
R17496:17496 Poly <> ::'('_x_','_x_')' not
R17498:17498 Poly <> ::'('_x_','_x_')' not
R17504:17504 Poly <> ::'('_x_','_x_')' not
R17499:17503 Basics <> false constr
R17519:17519 Poly <> ::'('_x_','_x_')' not
R17525:17525 Poly <> ::'('_x_','_x_')' not
R17539:17539 Poly <> ::'('_x_','_x_')' not
R17520:17520 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17522:17522 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17524:17524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17526:17526 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17532:17532 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17538:17538 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17533:17537 Basics <> false constr
R17527:17531 Basics <> false constr
ind 17837:17842 <> option
constr 17867:17870 <> Some
constr 17892:17895 <> None
R17879:17884 Poly <> option ind
R17899:17904 Poly <> option ind
R17920:17923 Poly <> Some constr
R17920:17923 Poly <> Some constr
R17943:17946 Poly <> None constr
R17943:17946 Poly <> None constr
def 18068:18072 <> index
R18090:18092 Coq.Init.Datatypes <> nat ind
R18115:18118 Poly <> list ind
R18120:18120 Poly <> X var
R18125:18130 Poly <> option ind
R18132:18132 Poly <> X var
R18145:18145 Poly <> l var
R18156:18157 Poly <> ::'['_']' not
R18162:18165 Poly <> None constr
R18172:18175 Poly <> ::x_'::'_x not
R18185:18191 Basics <> beq_nat def
R18195:18195 Coq.Init.Datatypes <> O constr
R18193:18193 Poly <> n var
R18214:18218 Poly <> index def
R18221:18224 Coq.Init.Peano <> pred def
R18226:18226 Poly <> n var
R18202:18205 Poly <> Some constr
def 18248:18258 <> test_index1
R18282:18285 Coq.Init.Logic <> :type_scope:x_'='_x not
R18265:18269 Poly <> index def
R18273:18273 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18275:18275 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18277:18277 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18279:18279 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18281:18281 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18286:18289 Poly <> Some constr
def 18328:18338 <> test_index2
R18363:18366 Coq.Init.Logic <> :type_scope:x_'='_x not
R18345:18349 Poly <> index def
R18354:18354 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18358:18358 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18362:18362 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18359:18359 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18361:18361 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18355:18355 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18357:18357 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18367:18370 Poly <> Some constr
R18372:18372 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18374:18374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18411:18421 <> test_index3
R18443:18446 Coq.Init.Logic <> :type_scope:x_'='_x not
R18428:18432 Poly <> index def
R18437:18437 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18442:18442 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18438:18441 Basics <> true constr
R18447:18450 Poly <> None constr
def 18703:18708 <> hd_opt
R18726:18729 Poly <> list ind
R18731:18731 Poly <> X var
R18737:18742 Poly <> option ind
R18744:18744 Poly <> X var
R18757:18757 Poly <> l var
R18770:18771 Poly <> ::'['_']' not
R18776:18779 Poly <> None constr
R18788:18791 Poly <> ::x_'::'_x not
R18798:18801 Poly <> Some constr
R18940:18945 Poly <> hd_opt def
def 18957:18968 <> test_hd_opt1
R18985:18987 Coq.Init.Logic <> :type_scope:x_'='_x not
R18973:18978 Poly <> hd_opt def
R18980:18980 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18982:18982 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18984:18984 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18988:18991 Poly <> Some constr
def 19037:19048 <> test_hd_opt2
R19071:19074 Coq.Init.Logic <> :type_scope:x_'='_x not
R19054:19059 Poly <> hd_opt def
R19062:19062 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19066:19066 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19070:19070 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19067:19067 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19069:19069 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19063:19063 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19065:19065 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19075:19078 Poly <> Some constr
R19080:19080 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19082:19082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19733:19742 <> doit3times
R19759:19759 Poly <> X var
R19756:19756 Poly <> X var
R19765:19765 Poly <> X var
R19770:19770 Poly <> X var
R19777:19777 Poly <> f var
R19780:19780 Poly <> f var
R19783:19783 Poly <> f var
R19785:19785 Poly <> n var
R19944:19953 Poly <> doit3times def
def 20025:20039 <> test_doit3times
R20063:20065 Coq.Init.Logic <> :type_scope:x_'='_x not
R20042:20051 Poly <> doit3times def
R20053:20060 Basics <> minustwo def
def 20104:20119 <> test_doit3times'
R20142:20144 Coq.Init.Logic <> :type_scope:x_'='_x not
R20122:20131 Poly <> doit3times def
R20138:20141 Basics <> true constr
R20133:20136 Basics <> negb def
R20145:20149 Basics <> false constr
R20443:20446 Coq.Init.Peano <> plus def
def 21168:21172 <> plus3
R21177:21180 Coq.Init.Peano <> plus def
R21191:21195 Poly <> plus3 def
def 21207:21216 <> test_plus3
R21230:21232 Coq.Init.Logic <> :type_scope:x_'='_x not
R21223:21227 Poly <> plus3 def
def 21270:21280 <> test_plus3'
R21304:21306 Coq.Init.Logic <> :type_scope:x_'='_x not
R21286:21295 Poly <> doit3times def
R21297:21301 Poly <> plus3 def
def 21344:21355 <> test_plus3''
R21381:21383 Coq.Init.Logic <> :type_scope:x_'='_x not
R21360:21369 Poly <> doit3times def
R21372:21375 Coq.Init.Peano <> plus def
def 22308:22317 <> prod_curry
R22350:22350 Poly <> Z var
R22342:22344 Poly <> :type_scope:x_'*'_x not
R22341:22341 Poly <> X var
R22345:22345 Poly <> Y var
R22358:22358 Poly <> X var
R22366:22366 Poly <> Y var
R22371:22371 Poly <> Z var
R22376:22376 Poly <> f var
R22378:22378 Poly <> ::'('_x_','_x_')' not
R22380:22381 Poly <> ::'('_x_','_x_')' not
R22383:22383 Poly <> ::'('_x_','_x_')' not
R22379:22379 Poly <> x var
R22382:22382 Poly <> y var
def 22528:22539 <> prod_uncurry
R22571:22571 Poly <> Z var
R22566:22566 Poly <> Y var
R22561:22561 Poly <> X var
R22580:22582 Poly <> :type_scope:x_'*'_x not
R22579:22579 Poly <> X var
R22583:22583 Poly <> Y var
R22588:22588 Poly <> Z var
R22596:22596 Poly <> f var
R22607:22609 Poly <> snd def
R22611:22611 Poly <> p var
R22599:22601 Poly <> fst def
R22603:22603 Poly <> p var
R22750:22759 Poly <> prod_curry def
R22769:22780 Poly <> prod_uncurry def
prf 22792:22804 <> uncurry_curry
R22845:22845 Poly <> Z var
R22840:22840 Poly <> Y var
R22835:22835 Poly <> X var
R22886:22888 Coq.Init.Logic <> :type_scope:x_'='_x not
R22855:22864 Poly <> prod_curry def
R22885:22885 Poly <> y var
R22883:22883 Poly <> x var
R22867:22878 Poly <> prod_uncurry def
R22880:22880 Poly <> f var
R22889:22889 Poly <> f var
R22893:22893 Poly <> y var
R22891:22891 Poly <> x var
prf 22962:22974 <> curry_uncurry
R23016:23016 Poly <> Z var
R23007:23009 Poly <> :type_scope:x_'*'_x not
R23006:23006 Poly <> X var
R23010:23010 Poly <> Y var
R23025:23027 Poly <> :type_scope:x_'*'_x not
R23024:23024 Poly <> X var
R23028:23028 Poly <> Y var
R23063:23065 Coq.Init.Logic <> :type_scope:x_'='_x not
R23034:23045 Poly <> prod_uncurry def
R23062:23062 Poly <> p var
R23048:23057 Poly <> prod_curry def
R23059:23059 Poly <> f var
R23066:23066 Poly <> f var
R23068:23068 Poly <> p var
R23111:23122 Poly <> prod_uncurry def
R23143:23152 Poly <> prod_curry def
def 23532:23537 <> filter
R23558:23561 Basics <> bool ind
R23555:23555 Poly <> X var
R23567:23570 Poly <> list ind
R23572:23572 Poly <> X var
R23578:23581 Poly <> list ind
R23583:23583 Poly <> X var
R23597:23597 Poly <> l var
R23610:23611 Poly <> ::'['_']' not
R23620:23621 Poly <> ::'['_']' not
R23630:23633 Poly <> ::x_'::'_x not
R23642:23645 Poly <> test var
R23680:23685 Poly <> filter def
R23687:23690 Poly <> test var
R23655:23659 Poly <> ::x_'::'_x not
R23673:23673 Poly <> ::x_'::'_x not
R23660:23665 Poly <> filter def
R23667:23670 Poly <> test var
def 23871:23882 <> test_filter1
R23907:23909 Coq.Init.Logic <> :type_scope:x_'='_x not
R23885:23890 Poly <> filter def
R23898:23898 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23900:23900 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23902:23902 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23904:23904 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23906:23906 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23892:23896 Basics <> evenb def
R23910:23910 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23912:23912 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23914:23914 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23966:23976 <> length_is_1
R23994:23997 Poly <> list ind
R23999:23999 Poly <> X var
R24004:24007 Basics <> bool ind
R24014:24020 Basics <> beq_nat def
R24023:24028 Poly <> length def
R24030:24030 Poly <> l var
def 24045:24056 <> test_filter2
R24131:24135 Coq.Init.Logic <> :type_scope:x_'='_x not
R24063:24068 Poly <> filter def
R24093:24094 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24101:24102 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24106:24107 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24111:24112 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24120:24121 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24124:24125 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24129:24130 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24126:24126 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24128:24128 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24122:24123 Poly <> ::'['_']' not
R24113:24113 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24115:24115 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24117:24117 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24119:24119 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24108:24108 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24110:24110 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24103:24103 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24105:24105 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24095:24095 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24097:24098 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24100:24100 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24070:24080 Poly <> length_is_1 def
R24136:24137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24141:24142 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24146:24147 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24151:24152 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24148:24148 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24150:24150 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24143:24143 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24145:24145 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24138:24138 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24140:24140 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24323:24338 <> countoddmembers'
R24343:24346 Poly <> list ind
R24348:24350 Coq.Init.Datatypes <> nat ind
R24355:24357 Coq.Init.Datatypes <> nat ind
R24364:24369 Poly <> length def
R24372:24377 Poly <> filter def
R24384:24384 Poly <> l var
R24379:24382 Basics <> oddb def
def 24397:24418 <> test_countoddmembers'1
R24453:24455 Coq.Init.Logic <> :type_scope:x_'='_x not
R24423:24438 Poly <> countoddmembers' def
R24440:24440 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24442:24442 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24444:24444 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24446:24446 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24448:24448 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24450:24450 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24452:24452 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24493:24514 <> test_countoddmembers'2
R24543:24545 Coq.Init.Logic <> :type_scope:x_'='_x not
R24519:24534 Poly <> countoddmembers' def
R24536:24536 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24538:24538 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24540:24540 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24542:24542 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24583:24604 <> test_countoddmembers'3
R24629:24631 Coq.Init.Logic <> :type_scope:x_'='_x not
R24609:24624 Poly <> countoddmembers' def
R24626:24628 Poly <> nil constr
def 25498:25511 <> test_anon_fun'
R25545:25547 Coq.Init.Logic <> :type_scope:x_'='_x not
R25516:25525 Poly <> doit3times def
R25538:25540 Basics <> :nat_scope:x_'*'_x not
R25537:25537 Poly <> n var
R25541:25541 Poly <> n var
def 25684:25696 <> test_filter2'
R25791:25795 Coq.Init.Logic <> :type_scope:x_'='_x not
R25703:25708 Poly <> filter def
R25753:25754 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25761:25762 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25766:25767 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25771:25772 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25780:25781 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25784:25785 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25789:25790 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25786:25786 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25788:25788 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25782:25783 Poly <> ::'['_']' not
R25773:25773 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25775:25775 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25777:25777 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25779:25779 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25768:25768 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25770:25770 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25763:25763 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25765:25765 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25755:25755 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25757:25758 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25760:25760 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25720:25726 Basics <> beq_nat def
R25729:25734 Poly <> length def
R25736:25736 Poly <> l var
R25796:25797 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25801:25802 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25806:25807 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25811:25812 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25808:25808 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25810:25810 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25803:25803 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25805:25805 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25798:25798 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25800:25800 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26120:26133 <> test_filtering
R26177:26179 Coq.Init.Logic <> :type_scope:x_'='_x not
R26138:26143 Poly <> filter def
R26168:26168 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26170:26170 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26172:26172 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26174:26174 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26176:26176 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26155:26161 Basics <> ble_nat def
R26165:26165 Poly <> n var
R26180:26180 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26182:26182 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26184:26184 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26226:26226 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26228:26228 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26230:26230 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26245:26259 <> filter_even_gt7
R26266:26269 Poly <> list ind
R26271:26273 Coq.Init.Datatypes <> nat ind
R26278:26281 Poly <> list ind
R26283:26285 Coq.Init.Datatypes <> nat ind
R26293:26298 Poly <> filter def
R26344:26344 Poly <> l var
R26312:26315 Basics <> andb def
R26328:26334 Basics <> ble_nat def
R26338:26338 Poly <> n var
R26318:26322 Basics <> evenb def
R26324:26324 Poly <> n var
def 26356:26377 <> test_filter_even_gt7_1
R26418:26420 Coq.Init.Logic <> :type_scope:x_'='_x not
R26383:26397 Poly <> filter_even_gt7 def
R26399:26399 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26401:26401 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26403:26403 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26405:26405 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26407:26407 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26410:26410 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26412:26412 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26415:26415 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26417:26417 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26421:26421 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26424:26424 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26427:26427 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26429:26429 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26473:26494 <> test_filter_even_gt7_2
R26530:26532 Coq.Init.Logic <> :type_scope:x_'='_x not
R26500:26514 Poly <> filter_even_gt7 def
R26516:26516 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26518:26518 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26520:26520 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26522:26522 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26525:26525 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26529:26529 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26533:26534 Poly <> ::'['_']' not
def 27180:27188 <> partition
R27214:27217 Basics <> bool ind
R27209:27209 Poly <> X var
R27225:27228 Poly <> list ind
R27230:27230 Poly <> X var
R27262:27264 Poly <> :type_scope:x_'*'_x not
R27256:27259 Poly <> list ind
R27261:27261 Poly <> X var
R27265:27268 Poly <> list ind
R27270:27270 Poly <> X var
R27275:27276 Poly <> ::'('_x_','_x_')' not
R27290:27293 Poly <> ::'('_x_','_x_')' not
R27329:27330 Poly <> ::'('_x_','_x_')' not
R27277:27282 Poly <> filter def
R27289:27289 Poly <> l var
R27284:27287 Poly <> test var
R27294:27299 Poly <> filter def
R27328:27328 Poly <> l var
R27312:27315 Basics <> negb def
R27318:27321 Poly <> test var
R27323:27323 Poly <> x var
def 27342:27356 <> test_partition1
R27385:27387 Coq.Init.Logic <> :type_scope:x_'='_x not
R27359:27367 Poly <> partition def
R27374:27374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27376:27376 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27378:27378 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27380:27380 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27382:27382 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27384:27384 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27369:27372 Basics <> oddb def
R27388:27388 Poly <> ::'('_x_','_x_')' not
R27396:27397 Poly <> ::'('_x_','_x_')' not
R27403:27403 Poly <> ::'('_x_','_x_')' not
R27389:27389 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27391:27391 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27393:27393 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27395:27395 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27398:27398 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27400:27400 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27402:27402 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27447:27461 <> test_partition2
R27498:27500 Coq.Init.Logic <> :type_scope:x_'='_x not
R27464:27472 Poly <> partition def
R27491:27491 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27493:27493 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27495:27495 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27497:27497 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27484:27488 Basics <> false constr
R27501:27501 Poly <> ::'('_x_','_x_')' not
R27504:27505 Poly <> ::'('_x_','_x_')' not
R27513:27513 Poly <> ::'('_x_','_x_')' not
R27502:27503 Poly <> ::'['_']' not
R27506:27506 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27508:27508 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27510:27510 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27512:27512 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27695:27697 <> map
R27716:27716 Poly <> Y var
R27713:27713 Poly <> X var
R27722:27725 Poly <> list ind
R27727:27727 Poly <> X var
R27746:27749 Poly <> list ind
R27751:27751 Poly <> Y var
R27765:27765 Poly <> l var
R27776:27777 Poly <> ::'['_']' not
R27786:27787 Poly <> ::'['_']' not
R27794:27797 Poly <> ::x_'::'_x not
R27803:27803 Poly <> ::x_'::'_x not
R27807:27812 Poly <> ::x_'::'_x not
R27820:27820 Poly <> ::x_'::'_x not
R27804:27804 Poly <> f var
R27813:27815 Poly <> map def
R27817:27817 Poly <> f var
def 28048:28056 <> test_map1
R28079:28081 Coq.Init.Logic <> :type_scope:x_'='_x not
R28059:28061 Poly <> map def
R28072:28072 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28074:28074 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28076:28076 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28078:28078 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28064:28067 Coq.Init.Peano <> plus def
R28082:28082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28084:28084 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28086:28086 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28088:28088 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 28397:28405 <> test_map2
R28426:28428 Coq.Init.Logic <> :type_scope:x_'='_x not
R28408:28410 Poly <> map def
R28417:28417 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28419:28419 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28421:28421 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28423:28423 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28425:28425 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28412:28415 Basics <> oddb def
R28429:28429 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28435:28435 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28440:28440 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28446:28446 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28451:28451 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28447:28450 Basics <> true constr
R28441:28445 Basics <> false constr
R28436:28439 Basics <> true constr
R28430:28434 Basics <> false constr
def 28638:28646 <> test_map3
R28694:28698 Coq.Init.Logic <> :type_scope:x_'='_x not
R28653:28655 Poly <> map def
R28685:28685 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28687:28687 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28689:28689 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28691:28691 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28693:28693 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28667:28667 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28675:28675 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28682:28682 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28676:28679 Basics <> oddb def
R28681:28681 Poly <> n var
R28668:28672 Basics <> evenb def
R28674:28674 Poly <> n var
R28699:28699 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28712:28712 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28725:28725 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28738:28738 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28751:28751 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28739:28739 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28745:28745 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28750:28750 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28746:28749 Basics <> true constr
R28740:28744 Basics <> false constr
R28726:28726 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28731:28731 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28737:28737 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28732:28736 Basics <> false constr
R28727:28730 Basics <> true constr
R28713:28713 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28719:28719 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28724:28724 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28720:28723 Basics <> true constr
R28714:28718 Basics <> false constr
R28700:28700 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28705:28705 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28711:28711 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28706:28710 Basics <> false constr
R28701:28704 Basics <> true constr
prf 28949:28956 <> snoc_rev
R28979:28982 Poly <> list ind
R28984:28984 Poly <> X var
R28992:28992 Poly <> X var
R29012:29014 Coq.Init.Logic <> :type_scope:x_'='_x not
R28998:29001 Poly <> snoc def
R29011:29011 Poly <> n var
R29004:29006 Poly <> rev def
R29008:29008 Poly <> l var
R29015:29017 Poly <> rev def
R29021:29022 Poly <> ::x_'::'_x not
R29020:29020 Poly <> n var
R29023:29023 Poly <> l var
prf 29165:29172 <> map_help
R29205:29205 Poly <> Y var
R29200:29200 Poly <> X var
R29213:29216 Poly <> list ind
R29218:29218 Poly <> X var
R29226:29226 Poly <> X var
R29248:29250 Coq.Init.Logic <> :type_scope:x_'='_x not
R29232:29234 Poly <> map def
R29239:29242 Poly <> snoc def
R29246:29246 Poly <> n var
R29244:29244 Poly <> l var
R29236:29236 Poly <> f var
R29251:29254 Poly <> snoc def
R29267:29267 Poly <> f var
R29269:29269 Poly <> n var
R29257:29259 Poly <> map def
R29263:29263 Poly <> l var
R29261:29261 Poly <> f var
prf 29441:29447 <> map_rev
R29481:29481 Poly <> Y var
R29476:29476 Poly <> X var
R29489:29492 Poly <> list ind
R29494:29494 Poly <> X var
R29513:29515 Coq.Init.Logic <> :type_scope:x_'='_x not
R29500:29502 Poly <> map def
R29507:29509 Poly <> rev def
R29511:29511 Poly <> l var
R29504:29504 Poly <> f var
R29516:29518 Poly <> rev def
R29521:29523 Poly <> map def
R29527:29527 Poly <> l var
R29525:29525 Poly <> f var
R29681:29688 Poly <> map_help thm
R29681:29688 Poly <> map_help thm
def 30163:30170 <> flat_map
R30191:30194 Poly <> list ind
R30196:30196 Poly <> Y var
R30186:30186 Poly <> X var
R30202:30205 Poly <> list ind
R30207:30207 Poly <> X var
R30213:30216 Poly <> list ind
R30218:30218 Poly <> Y var
R30232:30232 Poly <> l var
R30245:30246 Poly <> ::'['_']' not
R30251:30252 Poly <> ::'['_']' not
R30261:30264 Poly <> ::x_'::'_x not
R30270:30270 Poly <> ::x_'++'_x not
R30274:30279 Poly <> ::x_'++'_x not
R30292:30292 Poly <> ::x_'++'_x not
R30271:30271 Poly <> f var
R30280:30287 Poly <> flat_map def
R30289:30289 Poly <> f var
def 30310:30323 <> test_flat_map1
R30363:30367 Coq.Init.Logic <> :type_scope:x_'='_x not
R30328:30335 Poly <> flat_map def
R30356:30356 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30358:30358 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30360:30360 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30362:30362 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30347:30347 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30349:30349 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30351:30351 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30353:30353 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30352:30352 Poly <> n var
R30350:30350 Poly <> n var
R30348:30348 Poly <> n var
R30368:30368 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30370:30371 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30373:30374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30376:30377 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30379:30380 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30382:30383 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30385:30386 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30388:30389 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30391:30392 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30394:30394 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 30597:30606 <> option_map
R30631:30631 Poly <> Y var
R30626:30626 Poly <> X var
R30640:30645 Poly <> option ind
R30647:30647 Poly <> X var
R30674:30679 Poly <> option ind
R30681:30681 Poly <> Y var
R30694:30695 Poly <> xo var
R30708:30711 Poly <> None constr
R30716:30719 Poly <> None constr
R30727:30730 Poly <> Some constr
R30737:30740 Poly <> Some constr
R30743:30743 Poly <> f var
def 31262:31268 <> filter'
R31291:31294 Basics <> bool ind
R31286:31286 Poly <> X var
R31300:31303 Poly <> list ind
R31305:31305 Poly <> X var
R31311:31314 Poly <> list ind
R31316:31316 Poly <> X var
R31330:31330 Poly <> l var
R31341:31342 Poly <> ::'['_']' not
R31347:31348 Poly <> ::'['_']' not
R31355:31358 Poly <> ::x_'::'_x not
R31367:31370 Poly <> test var
R31408:31414 Poly <> filter' def
R31418:31421 Poly <> test var
R31416:31416 Poly <> X var
R31380:31384 Poly <> ::x_'::'_x not
R31401:31401 Poly <> ::x_'::'_x not
R31385:31391 Poly <> filter' def
R31395:31398 Poly <> test var
R31393:31393 Poly <> X var
def 31442:31445 <> map'
R31466:31466 Poly <> Y var
R31461:31461 Poly <> X var
R31472:31475 Poly <> list ind
R31477:31477 Poly <> X var
R31483:31486 Poly <> list ind
R31488:31488 Poly <> Y var
R31502:31502 Poly <> l var
R31513:31514 Poly <> ::'['_']' not
R31519:31520 Poly <> ::'['_']' not
R31527:31530 Poly <> ::x_'::'_x not
R31536:31536 Poly <> ::x_'::'_x not
R31540:31545 Poly <> ::x_'::'_x not
R31558:31558 Poly <> ::x_'::'_x not
R31537:31537 Poly <> f var
R31546:31549 Poly <> map' def
R31555:31555 Poly <> f var
R31553:31553 Poly <> Y var
R31551:31551 Poly <> X var
def 31880:31883 <> fold
R31906:31906 Poly <> Y var
R31903:31903 Poly <> Y var
R31900:31900 Poly <> X var
R31912:31915 Poly <> list ind
R31917:31917 Poly <> X var
R31923:31923 Poly <> Y var
R31928:31928 Poly <> Y var
R31941:31941 Poly <> l var
R31952:31954 Poly <> nil constr
R31959:31959 Poly <> b var
R31966:31969 Poly <> ::x_'::'_x not
R31975:31975 Poly <> f var
R31980:31983 Poly <> fold def
R31989:31989 Poly <> b var
R31985:31985 Poly <> f var
R32473:32476 Poly <> fold def
R32478:32481 Basics <> andb def
def 32543:32555 <> fold_example1
R32580:32582 Coq.Init.Logic <> :type_scope:x_'='_x not
R32559:32562 Poly <> fold def
R32569:32569 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32571:32571 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32573:32573 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32575:32575 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32577:32577 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32564:32567 Coq.Init.Peano <> mult def
def 32621:32633 <> fold_example2
R32674:32676 Coq.Init.Logic <> :type_scope:x_'='_x not
R32637:32640 Poly <> fold def
R32670:32673 Basics <> true constr
R32647:32647 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32652:32652 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32657:32657 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32663:32663 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32668:32668 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32664:32667 Basics <> true constr
R32658:32662 Basics <> false constr
R32653:32656 Basics <> true constr
R32648:32651 Basics <> true constr
R32642:32645 Basics <> andb def
R32677:32681 Basics <> false constr
def 32718:32730 <> fold_example3
R32765:32767 Coq.Init.Logic <> :type_scope:x_'='_x not
R32734:32737 Poly <> fold def
R32763:32764 Poly <> ::'['_']' not
R32744:32744 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32748:32748 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32751:32751 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32757:32757 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32761:32761 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32758:32758 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32760:32760 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32752:32752 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32754:32754 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32756:32756 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32749:32750 Poly <> ::'['_']' not
R32745:32745 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32747:32747 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32739:32741 Poly <> app def
R32768:32768 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32770:32770 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32772:32772 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32774:32774 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32776:32776 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 33700:33707 <> constfun
R33723:33723 Poly <> X var
R33733:33733 Poly <> X var
R33728:33730 Coq.Init.Datatypes <> nat ind
R33747:33749 Coq.Init.Datatypes <> nat ind
R33755:33755 Poly <> x var
def 33770:33774 <> ftrue
R33779:33786 Poly <> constfun def
R33788:33791 Basics <> true constr
def 33803:33819 <> constfun_example1
R33830:33832 Coq.Init.Logic <> :type_scope:x_'='_x not
R33823:33827 Poly <> ftrue def
R33833:33836 Basics <> true constr
def 33873:33889 <> constfun_example2
R33908:33910 Coq.Init.Logic <> :type_scope:x_'='_x not
R33894:33901 Poly <> constfun def
def 34254:34261 <> override
R34282:34282 Poly <> X var
R34277:34279 Coq.Init.Datatypes <> nat ind
R34288:34290 Coq.Init.Datatypes <> nat ind
R34296:34296 Poly <> X var
R34306:34306 Poly <> X var
R34301:34303 Coq.Init.Datatypes <> nat ind
R34320:34322 Coq.Init.Datatypes <> nat ind
R34331:34337 Basics <> beq_nat def
R34341:34342 Poly <> k' var
R34339:34339 Poly <> k var
R34356:34356 Poly <> f var
R34358:34359 Poly <> k' var
R34349:34349 Poly <> x var
def 34558:34568 <> fmostlytrue
R34573:34580 Poly <> override def
R34609:34613 Basics <> false constr
R34583:34590 Poly <> override def
R34600:34604 Basics <> false constr
R34592:34596 Poly <> ftrue def
def 34637:34653 <> override_example1
R34670:34672 Coq.Init.Logic <> :type_scope:x_'='_x not
R34657:34667 Poly <> fmostlytrue def
R34673:34676 Basics <> true constr
def 34713:34729 <> override_example2
R34746:34748 Coq.Init.Logic <> :type_scope:x_'='_x not
R34733:34743 Poly <> fmostlytrue def
R34749:34753 Basics <> false constr
def 34790:34806 <> override_example3
R34823:34825 Coq.Init.Logic <> :type_scope:x_'='_x not
R34810:34820 Poly <> fmostlytrue def
R34826:34829 Basics <> true constr
def 34866:34882 <> override_example4
R34899:34901 Coq.Init.Logic <> :type_scope:x_'='_x not
R34886:34896 Poly <> fmostlytrue def
R34902:34906 Basics <> false constr
prf 35207:35222 <> override_example
R35236:35239 Basics <> bool ind
R35277:35279 Coq.Init.Logic <> :type_scope:x_'='_x not
R35246:35253 Poly <> override def
R35270:35273 Basics <> true constr
R35256:35263 Poly <> constfun def
R35265:35265 Poly <> b var
R35280:35280 Poly <> b var
prf 36293:36310 <> unfold_example_bad
R36354:36356 Coq.Init.Logic <> :type_scope:x_'='_x not
R36350:36352 Basics <> :nat_scope:x_'+'_x not
R36343:36347 Poly <> plus3 def
R36349:36349 Poly <> n var
R36358:36360 Basics <> :nat_scope:x_'+'_x not
R36357:36357 Poly <> m var
R36333:36335 Coq.Init.Logic <> :type_scope:x_'='_x not
R36329:36331 Basics <> :nat_scope:x_'+'_x not
R36332:36332 Poly <> n var
R36336:36336 Poly <> m var
prf 36724:36737 <> unfold_example
R36781:36783 Coq.Init.Logic <> :type_scope:x_'='_x not
R36777:36779 Basics <> :nat_scope:x_'+'_x not
R36770:36774 Poly <> plus3 def
R36776:36776 Poly <> n var
R36785:36787 Basics <> :nat_scope:x_'+'_x not
R36784:36784 Poly <> m var
R36760:36762 Coq.Init.Logic <> :type_scope:x_'='_x not
R36756:36758 Basics <> :nat_scope:x_'+'_x not
R36759:36759 Poly <> n var
R36763:36763 Poly <> m var
R36817:36821 Poly <> plus3 def
prf 37037:37047 <> override_eq
R37079:37079 Poly <> X var
R37074:37076 Coq.Init.Datatypes <> nat ind
R37103:37105 Coq.Init.Logic <> :type_scope:x_'='_x not
R37086:37093 Poly <> override def
R37099:37099 Poly <> x var
R37097:37097 Poly <> k var
R37095:37095 Poly <> f var
R37102:37102 Poly <> k var
R37106:37106 Poly <> x var
R37135:37142 Poly <> override def
R37158:37169 Induction <> beq_nat_refl prfax
R37158:37169 Induction <> beq_nat_refl prfax
prf 37366:37377 <> override_neq
R37419:37419 Poly <> X var
R37414:37416 Coq.Init.Datatypes <> nat ind
R37488:37490 Coq.Init.Logic <> :type_scope:x_'='_x not
R37468:37475 Poly <> override def
R37482:37483 Poly <> x2 var
R37479:37480 Poly <> k2 var
R37477:37477 Poly <> f var
R37486:37487 Poly <> k1 var
R37491:37492 Poly <> x1 var
R37453:37455 Coq.Init.Logic <> :type_scope:x_'='_x not
R37440:37446 Basics <> beq_nat def
R37451:37452 Poly <> k1 var
R37448:37449 Poly <> k2 var
R37456:37460 Basics <> false constr
R37429:37431 Coq.Init.Logic <> :type_scope:x_'='_x not
R37425:37425 Poly <> f var
R37427:37428 Poly <> k1 var
R37432:37433 Poly <> x1 var
R37521:37528 Poly <> override def
def 38008:38018 <> fold_length
R38036:38039 Poly <> list ind
R38041:38041 Poly <> X var
R38046:38048 Coq.Init.Datatypes <> nat ind
R38055:38058 Poly <> fold def
R38077:38077 Poly <> l var
R38072:38072 Coq.Init.Datatypes <> S constr
R38074:38074 Poly <> n var
def 38091:38107 <> test_fold_length1
R38130:38132 Coq.Init.Logic <> :type_scope:x_'='_x not
R38111:38121 Poly <> fold_length def
R38123:38123 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38125:38125 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38127:38127 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38129:38129 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 38218:38236 <> fold_length_correct
R38254:38257 Poly <> list ind
R38259:38259 Poly <> X var
R38278:38280 Coq.Init.Logic <> :type_scope:x_'='_x not
R38265:38275 Poly <> fold_length def
R38277:38277 Poly <> l var
R38281:38286 Poly <> length def
R38288:38288 Poly <> l var
def 38592:38599 <> fold_map
R38622:38622 Poly <> Y var
R38617:38617 Poly <> X var
R38631:38634 Poly <> list ind
R38636:38636 Poly <> X var
R38641:38644 Poly <> list ind
R38646:38646 Poly <> Y var
R38653:38656 Poly <> fold def
R38685:38687 Poly <> nil constr
R38682:38683 Poly <> lx var
R38671:38671 Poly <> ::x_'::'_x not
R38675:38677 Poly <> ::x_'::'_x not
R38672:38672 Poly <> f var
R38674:38674 Poly <> x var
R38678:38679 Poly <> ly var
prf 38805:38820 <> fold_map_correct
R38852:38852 Poly <> Y var
R38847:38847 Poly <> X var
R38861:38864 Poly <> list ind
R38866:38866 Poly <> X var
R38885:38887 Coq.Init.Logic <> :type_scope:x_'='_x not
R38872:38879 Poly <> fold_map def
R38883:38884 Poly <> lx var
R38881:38881 Poly <> f var
R38888:38890 Poly <> map def
R38894:38895 Poly <> lx var
R38892:38892 Poly <> f var
prf 39468:39477 <> index_none
R39503:39505 Coq.Init.Datatypes <> nat ind
R39513:39516 Poly <> list ind
R39518:39518 Poly <> X var
R39552:39554 Coq.Init.Logic <> :type_scope:x_'='_x not
R39541:39545 Poly <> index def
R39551:39551 Poly <> l var
R39549:39549 Poly <> n var
R39547:39547 Poly <> X var
R39555:39558 Poly <> None constr
R39532:39534 Coq.Init.Logic <> :type_scope:x_'='_x not
R39524:39529 Poly <> length def
R39531:39531 Poly <> l var
R39535:39535 Poly <> n var
mod 39946:39951 <> Church
def 40296:40298 Church nat
R40337:40337 Poly <> X var
R40332:40332 Poly <> X var
R40326:40326 Poly <> X var
R40321:40321 Poly <> X var
def 40475:40477 Church one
R40481:40483 Poly Church nat def
R40516:40516 Poly <> X var
R40511:40511 Poly <> X var
R40524:40524 Poly <> X var
R40530:40530 Poly <> f var
R40532:40532 Poly <> x var
def 40601:40603 Church two
R40607:40609 Poly Church nat def
R40641:40641 Poly <> X var
R40636:40636 Poly <> X var
R40649:40649 Poly <> X var
R40655:40655 Poly <> f var
R40658:40658 Poly <> f var
R40660:40660 Poly <> x var
def 40814:40817 Church zero
R40821:40823 Poly Church nat def
R40855:40855 Poly <> X var
R40850:40850 Poly <> X var
R40863:40863 Poly <> X var
R40869:40869 Poly <> x var
def 41137:41141 Church three
R41145:41147 Poly Church nat def
R41153:41162 Poly Church doit3times def
def 41373:41376 Church succ
R41383:41385 Poly Church nat def
R41390:41392 Poly Church nat def
R41421:41421 Poly <> X var
R41416:41416 Poly <> X var
R41428:41428 Poly <> X var
R41434:41434 Poly <> n var
R41441:41441 Poly <> f var
R41443:41443 Poly <> x var
R41438:41438 Poly <> f var
R41436:41436 Poly <> X var
def 41456:41461 Church succ_1
R41474:41476 Coq.Init.Logic <> :type_scope:x_'='_x not
R41465:41468 Poly Church succ def
R41470:41473 Poly Church zero def
R41477:41479 Poly Church one def
def 41523:41528 Church succ_2
R41540:41542 Coq.Init.Logic <> :type_scope:x_'='_x not
R41532:41535 Poly Church succ def
R41537:41539 Poly Church one def
R41543:41545 Poly Church two def
def 41589:41594 Church succ_3
R41606:41608 Coq.Init.Logic <> :type_scope:x_'='_x not
R41598:41601 Poly Church succ def
R41603:41605 Poly Church two def
R41609:41613 Poly Church three def
def 41700:41703 Church plus
R41712:41714 Poly Church nat def
R41719:41721 Poly Church nat def
R41752:41752 Poly <> X var
R41747:41747 Poly <> X var
R41760:41760 Poly <> X var
R41766:41766 Poly <> n var
R41773:41773 Poly <> m var
R41779:41779 Poly <> x var
R41777:41777 Poly <> f var
R41775:41775 Poly <> X var
R41770:41770 Poly <> f var
R41768:41768 Poly <> X var
def 41792:41797 Church plus_1
R41814:41816 Coq.Init.Logic <> :type_scope:x_'='_x not
R41801:41804 Poly Church plus def
R41811:41813 Poly Church one def
R41806:41809 Poly Church zero def
R41817:41819 Poly Church one def
def 41864:41869 Church plus_2
R41887:41889 Coq.Init.Logic <> :type_scope:x_'='_x not
R41873:41876 Poly Church plus def
R41882:41886 Poly Church three def
R41878:41880 Poly Church two def
R41890:41893 Poly Church plus def
R41901:41903 Poly Church two def
R41895:41899 Poly Church three def
def 41947:41952 Church plus_3
R41983:41985 Coq.Init.Logic <> :type_scope:x_'='_x not
R41958:41961 Poly Church plus def
R41978:41982 Poly Church three def
R41964:41967 Poly Church plus def
R41973:41975 Poly Church two def
R41969:41971 Poly Church two def
R41986:41989 Poly Church plus def
R41996:41999 Poly Church plus def
R42007:42011 Poly Church three def
R42001:42005 Poly Church three def
R41991:41993 Poly Church one def
def 42082:42085 Church mult
R42094:42096 Poly Church nat def
R42101:42103 Poly Church nat def
R42111:42115 Basics <> admit prfax
def 42127:42132 Church mult_1
R42148:42150 Coq.Init.Logic <> :type_scope:x_'='_x not
R42136:42139 Poly Church mult def
R42145:42147 Poly Church one def
R42141:42143 Poly Church one def
R42151:42153 Poly Church one def
def 42201:42206 Church mult_2
R42238:42240 Coq.Init.Logic <> :type_scope:x_'='_x not
R42210:42213 Poly Church mult def
R42221:42224 Poly Church plus def
R42232:42236 Poly Church three def
R42226:42230 Poly Church three def
R42215:42218 Poly Church zero def
R42241:42244 Poly Church zero def
def 42292:42297 Church mult_3
R42315:42317 Coq.Init.Logic <> :type_scope:x_'='_x not
R42301:42304 Poly Church mult def
R42310:42314 Poly Church three def
R42306:42308 Poly Church two def
R42318:42321 Poly Church plus def
R42329:42333 Poly Church three def
R42323:42327 Poly Church three def
def 42656:42658 Church exp
R42667:42669 Poly Church nat def
R42674:42676 Poly Church nat def
R42702:42706 Basics <> admit prfax
def 42718:42722 Church exp_1
R42737:42739 Coq.Init.Logic <> :type_scope:x_'='_x not
R42726:42728 Poly Church exp def
R42734:42736 Poly Church two def
R42730:42732 Poly Church two def
R42740:42743 Poly Church plus def
R42749:42751 Poly Church two def
R42745:42747 Poly Church two def
def 42799:42803 Church exp_2
R42820:42822 Coq.Init.Logic <> :type_scope:x_'='_x not
R42807:42809 Poly Church exp def
R42817:42819 Poly Church two def
R42811:42815 Poly Church three def
R42823:42826 Poly Church plus def
R42854:42856 Poly Church one def
R42829:42832 Poly Church mult def
R42839:42842 Poly Church mult def
R42848:42850 Poly Church two def
R42844:42846 Poly Church two def
R42834:42836 Poly Church two def
def 42904:42908 Church exp_3
R42926:42928 Coq.Init.Logic <> :type_scope:x_'='_x not
R42912:42914 Poly Church exp def
R42922:42925 Poly Church zero def
R42916:42920 Poly Church three def
R42929:42931 Poly Church one def
R42975:42980 Poly Church <> mod
